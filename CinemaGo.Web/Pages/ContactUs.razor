@page "/contactus"

@using CinemaGo.DataModels.CustomModels;
@using CinemaGo.Web.Services;
@inject IUserPanelService userPanelService;
@inject ProtectedSessionStorage sessionStorage;
@inject NavigationManager navManager;
@*<div class=" container-mt-5 ">
        <h1>Contact Us!</h1>
        <form class=" row g-3 ">
            <div class=" col-md-6">
                <label for=" FirstName" class=" form-label ">First Name</label>
                <input type="text" class="form-control" id="FirstName" required>
            </div>
            <div class=" col-md-6">
                <label for=" LastName" class=" form-label ">Last Name</label>
                <input type="text" class=" form-control" id="LastName" required>
            </div>
            <div class=" col-md-8">
                <label for=" Email" class=" form-label ">E-mail</label>
                <input type="email" class=" form-control" id="Email" required>
            </div>
            <div class=" col-md-4">
                <label for=" PhoneNumber" class=" form-label ">Phone Number</label>
                <input type="text" class=" form-control" id="PhoneNumber" placeholder="(0124444444) ">
            </div>
            <div class=" col-md-12">
                <label for=" comments" class=" form-label ">Comments & Reviews?</label>
                <textarea class=" form-control " id="Comments" rows=" 4" required></textarea>
            </div>

            <div class=" col-md-12">
                <br />
                <button type="submit" class=" btn btn-primary ">Submit</button>

            </div>

        </form>

    </div>
    <br />*@
@if (contactusModel == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="card">
        <h4 class="card-header">Contact us!</h4>
        <div class="card-body">
            <EditForm Model="@contactusModel" OnValidSubmit="SaveContactUs">
                <DataAnnotationsValidator />
                <div class="form-row">
                    <div class="form-group col-3">
                        <label>First Name :</label>
                        <InputText @bind-Value="contactusModel.FirstName" class="form-control" />
                        <ValidationMessage For="@(() => contactusModel.FirstName)" />
                    </div>
                    <div class="form-group col-3">
                        <label>Last Name :</label>
                        <InputNumber @bind-Value="contactusModel.LastName" class="form-control" />
                        <ValidationMessage For="@(() => contactusModel.LastName)" />
                    </div>
                    <div class="form-group col-3">
                        <label>Email :</label>
                        <InputNumber @bind-Value="contactusModel.Email" class="form-control" />
                        <ValidationMessage For="@(() => contactusModel.Email)" />
                    </div>
                    <div class="form-group col-3">
                        <label>Phone Number :</label>
                        <InputText @bind-Value="contactusModel.PhoneNumber" class="form-control" />
                        <ValidationMessage For="@(() => contactusModel.PhoneNumber)" />
                    </div>
                    <div class="form-group col-12">
                        <label>Comment&Review :</label>
                        <InputText @bind-Value="contactusModel.Comment" class="form-control" />
                        <ValidationMessage For="@(() => contactusModel.Comment)" />
                    </div>

                    <div class="text-left">
                        <input type="submit" class="btn btn-primary" value="Save" />
                        <input type="button" class="btn btn-primary" value="Clear" @onclick="ClearForm" />
                    </div>
                </div>
            </EditForm>

        </div>
        <div class="card-body">
            @if (contactusList == null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <table class="table table-striped table-bordered bg-light">
                    <thead>
                        <tr>
                            <th style="width:15px;">Sr.No</th>
                            <th>First Name</th>
                            <th>Last Name</th>
                            <th>Email</th>
                            <th>Phone Number</th>
                            <th>Comment & Review</th>
                            <th style="width:80px;">Delete?</th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var (index, cont) in contactusList.Select((cont, i) => (i + 1, cont)))
                        {
                            <tr>
                                <td>@index</td>
                                <td>@cont.FirstName</td>
                                <td>@cont.LastName</td>
                                <td>@cont.Email</td>
                                <td>@cont.PhoneNumber</td>
                                <td>@cont.Comment</td>
                                <td> <input type="button" class="btn btn-primary" value="Delete" @onclick="(()=> DeleteButtonClick(cont))" /></td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
}

@if (showDeletePopup == true)
{
    <div class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h5>Delete Message</h5>
                <span class="close" @onclick="ToggleDeletePopup">&times;</span>
            </div>
            <div class="modal-body">
                Confirm Delete? <span style="background-color:yellow;">@contactusToDelete</span>
            </div>
            <div class="modal-footer">
                <input type="button" class=" tbn btn-primary" value="Yes" @onclick="DeleteContactUs" />
                <input type="button" class=" tbn btn-primary" value="No" @onclick="ToggleDeletePopup" />
            </div>
        </div>
    </div>
}

@if (successPopup == true)
{
    <div class="modal">
        <div class="modal-content">
            <div class="modal-header">
                Alert <span class="close" @onclick="ToggleSuccessPopup">&times;</span>
            </div>
            <div class="modal-body">
                @Message
            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-primary" value="Close" @onclick="ToggleSuccessPopup" />
            </div>
        </div>
    </div>
}

@code {
    [CascadingParameter]
    public EventCallback notify { get; set; }
    public ContactUsModel contactusModel { get; set; }
    public List<ContactUsModel> contactusList { get; set; }
    public bool showDeletePopup = false;
    public bool successPopup = false;
    string Message = string.Empty;
    public ContactUsModel contactusToDelete { get; set; }

    protected override async Task OnInitializedAsync()
    {
        contactusModel = new ContactUsModel();

        await GetContactUss();
    }

    private async Task GetContactUss()
    {
        contactusList = await userPanelService.GetContactUss();
    }

    private async Task DeleteContactUs()
    {

        bool flag = await userPanelService.DeleteContactUs(contactusToDelete);
        ToggleDeletePopup();
        if (flag)
        {
            Message = "Message Deleted Successfully !!";
        }
        else
        {
            Message = "Message Not Deleted, Try Again !!";
        }

        ToggleSuccessPopup();
        contactusToDelete = new ContactUsModel();
        await GetContactUss();
    }

    private async Task SaveContactUs()
    {

        await userPanelService.SaveContactUs(contactusModel);
        await GetContactUss();
        ClearForm();
    }

    private void ClearForm()
    {
        contactusModel = new ContactUsModel();

    }

    private void DeleteButtonClick(ContactUsModel _contactusToDelete)
    {
        contactusToDelete = _contactusToDelete;
        ToggleDeletePopup();
    }
    private void ToggleDeletePopup()
    {
        showDeletePopup = showDeletePopup == true ? false : true;
    }

    private void ToggleSuccessPopup()
    {
        successPopup = successPopup == true ? false : true;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await notify.InvokeAsync();
        }

    }
}
